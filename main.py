import telebot
import time
import random
import psycopg2
import exam_functions as ef
from get_env import get_env_data_as_dict

env = get_env_data_as_dict('/usr/med_exam_prep/.env')

conn = psycopg2.connect(
    host="localhost",
    database=env["PG_DB"],
    user=env["PG_USER"],
    password=env["PG_PWD"]
)

bot = telebot.TeleBot(env["TG_BOT_TOKEN"])

@bot.message_handler(commands=['start'])
def send_welcome(message):
	
	bot.reply_to(message,
	    """
		–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –±–æ—Ç–∞.\
		–¢—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ —Å–µ—Ä–≤–∏—Å–µ.\
		–¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã —Ö–æ—á–µ—à—å —Ä–µ—à–∞—Ç—å.""")
	
	bot.send_message(message.chat.id, f'–¢–≤–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä - {message.chat.id}')

	ef.register_user(conn, message.chat.id)
	
	# ef.ask_question(conn, message.chat.id, bot)

@bot.message_handler(commands=['ask'])
def send_welcome(message):


	session_id = ef.get_user_session(conn, message.chat.id)

	question_ids = message.text.split(' ')[1:]

	ef.set_session_question_range(conn, message.chat.id, session_id, question_ids[0], question_ids[1])

	bot.send_message(message.chat.id, f'–í–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã: —Å {question_ids[0]} –ø–æ {question_ids[1]}')

	ef.ask_question(conn, message.chat.id, bot)
	

@bot.message_handler(func=lambda message: int(message.text))
def echo_all(message):
	
	expected_answer = ef.get_expected_answer(conn, message.chat.id)

	user_answer = set(list(message.text))

	if ef.validate_answer_message(message.text):
		bot.send_message(message.chat.id, 'üôÄ —ç—Ç–æ –Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞. –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏ —á–∏—Å–ª–æ –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤')
	else:
		if user_answer == expected_answer:
			bot.send_message(message.chat.id, '–í–µ—Ä–Ω–æ üò∏')
			ef.finish_session(conn, message.chat.id)
			ef.ask_question(conn, message.chat.id, bot)
		else:
			bot.send_message(message.chat.id, '–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ üòø')


bot.infinity_polling()
